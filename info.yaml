--- 
project:
  source_files:
    - toplevel_chip.v
    - chip.sv
    - decoder.v
    - RangeFinder.sv
  top_module:  "toplevel_chip"

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it.
#
# Here is an example: https://github.com/mattvenn/tinytapeout_m_segments/blob/main/info.yaml
#
# This info will be automatically collected and used to make a datasheet for the chip.
documentation: 
  author:       "Andrew Yu"      # Your name
  discord:      "Andrew923"      # Your discord handle
  title:        "RangeFinder"      # Project title
  description:  "Finds max-min of a series of numbers"      # Short description of what your project does
  how_it_works: "On the clock edge where go is asserted and every clock edge after, up until (and including) the edge where finish is asserted, your hardware thread will take a look at the data_in value. Of all of such values, determine which is the largest and which is the smallest (these are unsigned values). Output on range the difference between the largest and smallest."
  how_to_test:  "Just run RangeFinder_test.sv"      # Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  external_hw:  "N/A"      # Describe any external hardware needed
  language:     "verilog" # other examples include Verilog, Amaranth, VHDL, etc
  doc_link:     ""      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     1000       # Clock frequency in Hz (if required)
  picture:      ""      # relative path to a picture in your repository
  inputs:               # a description of what the inputs do
    - io_in[9:0] data_in
    - io_in[11] go
    - io_in[10] finish
  outputs:
    - io_out[9:0] range
    - io_out[11] debug_error

